{"version":3,"sources":["components/Title.jsx","components/Form.jsx","components/Result.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","title","margin","Title","classes","Typography","variant","align","className","button","spacing","width","Form","setSentenceAPI","setPreventrunfirsttime","useState","sentence","setSentence","error","setError","onSubmit","e","preventDefault","trim","TextField","helperText","label","fullWidth","multiline","rowsMax","onChange","target","value","Grid","container","justify","Button","type","color","endIcon","Send","size","TableHead","fontWeight","Result","result","languages","Table","TableRow","TableCell","TableBody","map","index","code","language","name","confidence","skeleton","height","App","sentenceAPI","setResult","preventrunfirsttime","setLanguages","loading","setLoading","useEffect","a","axios","get","data","getLanguages","url","response","detections","consumeAPI","setTimeout","Container","Skeleton","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f9bf938.chunk.js","sourcesContent":["import { Typography } from '@material-ui/core';\r\nimport { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title:{\r\n        margin:'30px'\r\n    }\r\n}));\r\nconst Title = () => {\r\n    const classes = useStyles();\r\n    return ( \r\n        <Fragment>\r\n            <Typography \r\n                variant=\"h2\" \r\n                align=\"center\"\r\n                className={classes.title}\r\n            >\r\n                Language Detection\r\n            </Typography>\r\n\r\n\r\n        </Fragment>\r\n\r\n\r\n     );\r\n}\r\n \r\nexport default Title;","import {Fragment, useState } from 'react';\r\nimport { TextField, Button, Grid } from '@material-ui/core';\r\nimport { Send } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    button: {\r\n      margin: theme.spacing(3),\r\n      width: '300px',\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst Form = ({setSentenceAPI, setPreventrunfirsttime}) => {\r\n    const classes = useStyles();\r\n\r\n    const [sentence, setSentence] = useState('');\r\n    const [error, setError] = useState(false);\r\n    \r\n\r\n    const setValue = e =>{\r\n        \r\n        setSentence(e.target.value);\r\n    }\r\n\r\n    const submitSentence = e =>{\r\n        e.preventDefault();\r\n\r\n\r\n        //validate textfield\r\n        if (sentence.trim()===''){\r\n            setPreventrunfirsttime(false);\r\n            setError(true);\r\n            \r\n            return;\r\n        }\r\n\r\n        //delete error message\r\n        setError(false);\r\n\r\n        \r\n        //confirm sentence\r\n        setSentenceAPI(sentence);\r\n\r\n        //set true\r\n        setPreventrunfirsttime(true);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <Fragment>\r\n\r\n       <form\r\n        onSubmit={submitSentence}\r\n       >\r\n            <TextField \r\n                //error message\r\n                error={error ? true : false}\r\n                helperText= {error ? \"Error. Field empty.\" : null}\r\n               \r\n                label=\"Write a sentence\"\r\n                variant=\"outlined\" \r\n                fullWidth\r\n                multiline\r\n                rowsMax={8}\r\n                onChange={setValue}\r\n                value={sentence}\r\n            />  \r\n            <Grid container justify=\"center\">\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\" \r\n                    className={classes.button}\r\n                    endIcon={<Send />}\r\n                    size=\"large\"\r\n                >\r\n                Detect\r\n                </Button>\r\n            </Grid>\r\n              \r\n          </form>\r\n          </Fragment>\r\n     );\r\n}\r\n\r\nForm.propTypes = {\r\n    setSentenceAPI: PropTypes.func.isRequired,\r\n    setPreventrunfirsttime: PropTypes.func.isRequired,\r\n  };\r\n \r\nexport default Form;","import {Table, TableBody , TableCell , TableHead , TableRow } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    TableHead: {\r\n      fontWeight:'bold'\r\n    }\r\n  }));\r\n\r\nconst Result = ({result, languages}) => {\r\n\r\n    const classes = useStyles();\r\n    return ( \r\n   \r\n      \r\n\r\n        <Table>\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell className={classes.TableHead} variant=\"head\">Language</TableCell>\r\n                    <TableCell className={classes.TableHead} align=\"right\">Confidence</TableCell> \r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {result.map((result,index) =>\r\n                <TableRow key={index}>\r\n\r\n                    {/*Return name of language */}\r\n                    <TableCell>{languages.map(code => result.language===code.code ? code.name : null)}</TableCell>\r\n                    \r\n                    <TableCell align=\"right\">{result.confidence}</TableCell>\r\n \r\n                </TableRow>\r\n                )}\r\n            </TableBody>\r\n\r\n        </Table>\r\n    \r\n        \r\n\r\n\r\n     );\r\n}\r\n\r\nResult.propTypes = {\r\n    result: PropTypes.array.isRequired,\r\n    languages: PropTypes.array.isRequired,\r\n  };\r\n \r\nexport default Result;","import { useState, useEffect } from 'react';\nimport { Container } from '@material-ui/core';\nimport Title from './components/Title';\nimport Form from './components/Form';\nimport Result from './components/Result';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\n  skeleton:{\n    width:'100%',\n    height:'200px'\n  }\n}));\n\n\n\nfunction App() {\n\n  const [sentenceAPI, setSentenceAPI] = useState('')\n  const [result, setResult] = useState([])\n  const [preventrunfirsttime, setPreventrunfirsttime] = useState(false);\n  //usestate for languages\n  const [languages, setLanguages] = useState([])\n  //loading\n  const [loading, setLoading] = useState(false)\n\n\n  //load languages when load page\n  useEffect(() => {\n    const getLanguages = async () =>{\n      const languages = await axios.get('https://ws.detectlanguage.com/0.2/languages')\n      setLanguages(languages.data)\n    }\n    getLanguages();\n\n  }, [])\n\n\n  useEffect(() => {\n    if (preventrunfirsttime){\n      setLoading(true);\n      //set url\n      let url=`https://ws.detectlanguage.com/0.2/detect?q=${sentenceAPI}&key=c34c8f15175d31129d2f656ef13e19d3`\n      //consume api\n      const consumeAPI = async () =>{\n        let response = await axios.get(url);\n        setResult(response.data.data.detections)\n      }\n      \n      consumeAPI(); \n     \n      setTimeout(() => {\n        \n        \n        setLoading(false);\n\n      }, 2000);\n      \n      \n\n    }\n    // eslint-disable-next-line\n  }, [sentenceAPI])\n\n\n  const classes = useStyles();\n  return (\n    \n    <Container >\n      <Title/>\n      <Form\n        setSentenceAPI={setSentenceAPI}\n        setPreventrunfirsttime={setPreventrunfirsttime}\n      />\n      {\n        loading\n        ?\n        <Skeleton variant=\"rect\" className={classes.skeleton} />      \n        :\n           preventrunfirsttime\n          ?\n          <Result \n            result={result}\n            languages={languages}\n          />\n          :\n          null\n\n      }\n\n    \n\n    </Container>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}